# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: targum-editor-lock
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  apiKeys:
    - name: ContentfulKey${opt:stage} # let cloudformation name the key (recommended when setting api key value)
      description: Api key to be used to secure endpoints # Optional
  runtime: nodejs12.x
  stage: ${opt:stage,'dev'}
  region: us-east-1
  environment:
    TABLE: ${self:custom.table.${self:provider.stage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "*"

custom:
  stages:
    - dev
    - prod
  table:
    local: EditorCheckoutDev
    dev: EditorCheckoutDev
    prod: EditorCheckoutProd

functions:
  changeState:
    handler: handler.changeState
    events:
      - http:
          path: entry
          method: post
          cors: true
          private: true
  getState:
    handler: handler.getState
    events:
      - http:
          path: entry/{entryId}
          method: get
          cors: true
          private: true

resources:
  Resources:
    CandidatesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: "entryId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "entryId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.TABLE}